name: Perform Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  collection-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.ls.outputs.packages }}
    steps:
      - uses: actions/checkout@v2
      - name: Gather package directories
        id: ls
        run: echo "packages=[$(ls -d packages/* | sed 's/[^[:alnum:]]/\\&/g' | sed 's/.*/"&",/' | tr -d '\n' | sed '$s/,$//')]" >> $GITHUB_OUTPUT

  cache-modules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          pnpm store path
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ '**/node_modules' }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Dependencies
        shell: bash
        run: pnpm i

      - name: Prune Store
        run: pnpm store prune

  Lint:
    runs-on: ubuntu-latest
    needs: [collection-packages, cache-modules]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.collection-packages.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          pnpm store path
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore cached Modules
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ '**/node_modules' }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Dependencies
        shell: bash
        run: pnpm i

      - name: Lint
        run: pnpm run -C ${{ matrix.package }} lint:check

  Test:
    runs-on: ubuntu-latest
    needs: [collection-packages, cache-modules]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.collection-packages.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          pnpm store path
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore cached Modules
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ '**/node_modules' }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Dependencies
        shell: bash
        run: pnpm i

      - name: Test
        run: pnpm run -C ${{ matrix.package }} test --run --reporter=verbose

  Build:
    runs-on: ubuntu-latest
    needs: [collection-packages, cache-modules]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.collection-packages.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          pnpm store path
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore cached Modules
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ '**/node_modules' }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Dependencies
        shell: bash
        run: pnpm i

      - name: Build Package
        run: pnpm run -C ${{ matrix.package }} -r build
